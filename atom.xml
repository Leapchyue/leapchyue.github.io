<?xml version="1.0" encoding="UTF-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title><![CDATA[Leap]]></title>
  <subtitle><![CDATA[加油！跨过去！]]></subtitle>
  <link href="http://chenyue.me/atom.xml" rel="self"/>
  <link href="http://chenyue.me"/>
  <updated>2013-12-17T15:05:33.429Z</updated>
  <id>http://chenyue.me/</id>
  <author>
    <name><![CDATA[York Chen]]></name>
    <email><![CDATA[chenyue345@gmail.com]]></email>
  </author>
  <generator uri="http://zespia.tw/hexo">Hexo</generator>
  <entry>
    <title type="html"><![CDATA[Sublime的使用和技巧]]></title>
    <link href="http://chenyue.me/2013/12/17/using-sublime3-as-my-editer/"/>
    <id>http://chenyue.me/2013/12/17/using-sublime3-as-my-editer/</id>
    <published>2013-12-17T06:13:16.000Z</published>
    <updated>2013-12-17T14:57:55.000Z</updated>
    <content type="html"><![CDATA[<p>在发现<a href="http://www.sublimetext.com/" target="_blank">sublime</a>之前，编辑器使用<a href="http://notepad-plus-plus.org/" target="_blank">notepad++</a>，发现sublime这神器以后就一直用sublime做为编辑器了，使用多光标操作爽爆了。唯一不是很爽的就是不能像notpad++那样可视化显示换行符。不过后来发现它有插件可以基本实现这个功能。</p>
<p>个人觉得它比较赞的功能有：</p>
<ul>
<li>多光标</li>
<li>Snippets</li>
<li>方便的查找</li>
<li>各种可视化，对比vim之类神器</li>
<li>非常方便支持插件</li>
<li>……</li>
</ul>
<a id="more"></a>

<h1>安装与功能浏览</h1>
<p>安装环境windows 7 。</p>
<p>到sublime官网下载安装就可以，现在有两个版本，<a href="http://www.sublimetext.com/2" target="_blank">2.0.2</a>和<a href="http://www.sublimetext.com/3" target="_blank">3047</a>，区别不是很清楚，囧。有免费版也有付费版，付费版需要USD70，超级贵，免费版功能上跟付费版没什么区别，无限制时间使用，但是在保存时偶尔会弹出一个购买的对话框，基本不影响使用。</p>
<p>安装后打开，你就会喜欢上的，基本上使用默认的配置就ok，我这人就是这样基本使用默认，囧。</p>
<p>在安装后，一般都会查看下这个软件到底有啥功能，这个从上面的菜单栏，一项一项的往下看就可以了解这个软件的功能了，装完软件都会象征性的浏览下，了解个大概，后面需要用的时候才知道在哪。</p>
<ul>
<li><p>Edit，跟编辑相关的一些设置，大小写，tag，mark，code folding等操作<br>Sort Lines，按行排序</p>
</li>
<li><p>View，视图，代码高亮，换行符类型编码格式和tab设置等<br>Minimap，右边的边栏，现在文件的缩略图，可以对文件进行一个粗定位，一开始被吸引的原因<br>Side Bar，这个就是左边的一个边栏，在打开比较多文件的时候很用<br>Console，控制台，可以看下sublime的执行情况</p>
</li>
<li><p>Tool，工具，有强大的工具，snippets，macro（宏）等<br>Ctrl   Palette，查看功能，很强大很方便<br>Snippets，代码片段库，可以自己添加，很方便插入</p>
</li>
<li><p>Preferces，配置，配置文件是json格式</p>
</li>
</ul>
<h1>快捷键</h1>
<p>使用快捷键可以免去操作鼠标，加快码力。 快捷键的设置在<code>Preferences</code>下的<code>key Bindings - Defalt</code>，这个文件不可编辑，可以用来查看快捷键的内容，<code>key Bindings - User</code>为设置个人的快捷键。一般设置快捷键前在defalt里面查找后，再user里面添加更改。</p>
<p>不知道功能的快捷键还可以在菜单栏找，一般菜单后面有写快捷键。</p>
<p>常用的快捷键很多都跟一般的快捷键一样，像<code>Ctrl + C</code>，<code>Ctrl + V</code>等，这些功能都一样。下面介绍一些常用的快捷键。</p>
<h2>关于标签页的快捷键</h2>
<p>这个最常用了。</p>
<table>
<thead>
<tr>
<th>常用快捷键</th>
<th>功能</th>
</tr>
</thead>
<tbody>
<tr>
<td><em>Ctrl + W</em></td>
<td>关闭当前标签页</td>
</tr>
<tr>
<td>Ctrl + N</td>
<td>新建标签页</td>
</tr>
<tr>
<td>Ctrl + Tab</td>
<td>切换标签页</td>
</tr>
</tbody>
</table>
<h2>跟编辑相关的快捷键</h2>
<p>主要是方便复制粘帖等等，不用这些的话有时候操作就会多一些</p>
<table>
<thead>
<tr>
<th>常用快捷键</th>
<th>功能</th>
</tr>
</thead>
<tbody>
<tr>
<td>Tab</td>
<td>缩进</td>
</tr>
<tr>
<td>Shift+Tab</td>
<td>去除缩进</td>
</tr>
<tr>
<td>Ctrl + K Ctrl + V</td>
<td><em>从历史粘贴</em>，有些时候很方便，不用每次复制粘帖</td>
</tr>
<tr>
<td><em>Ctrl + X</em></td>
<td>删除当前行</td>
</tr>
<tr>
<td>Ctrl + Shift + K</td>
<td>删除当前行</td>
</tr>
<tr>
<td>Ctrl + Shift + D</td>
<td>复制当前所在整行</td>
</tr>
<tr>
<td>Ctrl + K + K</td>
<td>从光标处删除至行尾 一般是按住Shift+Home/End再加delete</td>
</tr>
<tr>
<td>Ctrl + K + Backspace</td>
<td>从光标处删除至行首</td>
</tr>
<tr>
<td><em>Ctrl + J</em></td>
<td>删除当前行的换行符，如选择多行会把多行合成一行后再删除换行符</td>
</tr>
<tr>
<td>Ctrl + Enter</td>
<td>插入行后</td>
</tr>
<tr>
<td>Ctrl + Shift + Enter</td>
<td>插入行前</td>
</tr>
<tr>
<td>Ctrl + Shift + UP</td>
<td>与上行互换</td>
</tr>
<tr>
<td>Ctrl + Shift + DOWN</td>
<td>与下行互换</td>
</tr>
<tr>
<td>Ctrl + K + U</td>
<td>改为大写</td>
</tr>
<tr>
<td>Ctrl + K + L</td>
<td>改为小写</td>
</tr>
<tr>
<td>Ctrl + Y</td>
<td>恢复撤销</td>
</tr>
<tr>
<td>Ctrl + Z</td>
<td>撤销操作</td>
</tr>
<tr>
<td>Ctrl + U</td>
<td>软撤销，只是撤销光标位置</td>
</tr>
</tbody>
</table>
<h2>选择，多光标操作快捷键</h2>
<p>选择，多光标还有一些普遍适合的快捷键，如，按入Shift+方向键/Home/End等等。</p>
<table>
<thead>
<tr>
<th>常用快捷键</th>
<th>功能</th>
</tr>
</thead>
<tbody>
<tr>
<td>Ctrl + Shift + M</td>
<td>选择括号内的内容</td>
</tr>
<tr>
<td>Ctrl + L</td>
<td>选择整行(按住-继续选择下行)</td>
</tr>
<tr>
<td>Ctrl + 鼠标左键</td>
<td>出现多光标，可以多光标操作</td>
</tr>
<tr>
<td>Shift + 鼠标右键</td>
<td>竖向多行插入光标</td>
</tr>
<tr>
<td>按住鼠标中键</td>
<td>竖向多行插入光标</td>
</tr>
<tr>
<td>Ctrl + D</td>
<td>选中光标所在的‘单词’，连续操作则会多选中下一个相同的单词</td>
</tr>
<tr>
<td><em>Alt + F3</em></td>
<td>全选文本中当前选中的内容</td>
</tr>
<tr>
<td>Ctrl + M</td>
<td>光标移动至括号内结束或开始的位置</td>
</tr>
</tbody>
</table>
<h1>写代码经常用到的快捷键</h1>
<p>有注释，折叠，格式化等操作</p>
<table>
<thead>
<tr>
<th>常用快捷键</th>
<th>功能</th>
</tr>
</thead>
<tbody>
<tr>
<td><em>Ctrl + /</em></td>
<td>注释整行</td>
</tr>
<tr>
<td>Ctrl + Shift + /</td>
<td>注释已选择内容</td>
</tr>
<tr>
<td>Ctrl + Shift + [</td>
<td>折叠代码</td>
</tr>
<tr>
<td>Ctrl + Shift + ]</td>
<td>展开代码</td>
</tr>
<tr>
<td>Ctrl + K + 0</td>
<td>展开所有</td>
</tr>
<tr>
<td>Ctrl + K + T</td>
<td>折叠属性</td>
</tr>
<tr>
<td>Shift + Space</td>
<td>自动完成（本来是Ctrl + Space，与系统快捷键冲突，改成这样）</td>
</tr>
<tr>
<td><em>Alt + Shift + F</em></td>
<td>格式化命令 reindent <em>需要自己定义快捷键</em></td>
</tr>
<tr>
<td>Alt + .</td>
<td>闭合标签</td>
</tr>
<tr>
<td>Ctrl + F2</td>
<td>设置/删除标记</td>
</tr>
</tbody>
</table>
<h2>其他常用的快捷键</h2>
<p>包括一些功能快捷键，查找，分屏等等</p>
<table>
<thead>
<tr>
<th>常用快捷键</th>
<th>功能</th>
</tr>
</thead>
<tbody>
<tr>
<td>F9</td>
<td>行排序</td>
</tr>
<tr>
<td>F6</td>
<td>拼写检查</td>
</tr>
<tr>
<td>F11</td>
<td>全屏</td>
</tr>
<tr>
<td>Shift + F11</td>
<td>无打扰模式的全屏</td>
</tr>
<tr>
<td>Ctrl + K + B</td>
<td>开启/关闭侧边栏</td>
</tr>
<tr>
<td>Ctrl + `</td>
<td>打开Console界面</td>
</tr>
<tr>
<td>Alt + Shift + ^[067]</td>
<td>各种各样的分屏，每个屏为一个group</td>
</tr>
<tr>
<td>Ctrl + K，Ctrl + 左右方向</td>
<td>分屏后的换屏，其他快捷键看菜单栏</td>
</tr>
<tr>
<td>Ctrl + Shift + P</td>
<td>打开命令面板</td>
</tr>
<tr>
<td>Ctrl + R</td>
<td>快速列出/跳转到某个函数</td>
</tr>
<tr>
<td>Ctrl + G</td>
<td>跳转到相应的行</td>
</tr>
<tr>
<td>Ctrl + P</td>
<td>Goto Anything</td>
</tr>
</tbody>
</table>
<p>Ctrl + P 功能非常强大，可以实现任意跳转等等</p>
<ul>
<li>Ctrl + P 可以快速跳转到当前项目中的任意文件，可进行关键词匹配</li>
<li>输入 Ctrl + P 后，输入 <code>@</code> (跟Ctrl + R功能相同)可以快速列出/跳转到某个函数，在 markdown中是跳转到标题</li>
<li>输入 Ctrl + P 后，输入 <code>#</code> 可以在当前文件中进行搜索。</li>
<li>输入 Ctrl + P 后，输入 <code>:</code> (或是Ctrl+G功能相同)加上数字可以跳转到相应的行</li>
</ul>
<p>Ctrl + Shift + P 打开命令面板<br>可以先浏览下大概有哪些命令，我比较常用它设置语言高亮类型，预览MD文件等等。</p>
<h1>插件</h1>
<p>Sublime 3的第一插件需要自己去安装，= =，就是安装一个用来管理插件的包<code>sublime_package_control</code>。</p>
<h2>Package Control</h2>
<p>安装也非常简单，有两种方法，一种是在命令台输入</p>
<figure class="highlight lang-python"><table><tr><td class="gutter"><pre>1
</pre></td><td class="code"><pre><span class="keyword">import</span> urllib.request,os; pf = <span class="string">'Package Control.sublime-package'</span>; ipp = sublime.installed_packages_path(); urllib.request.install_opener( urllib.request.build_opener( urllib.request.ProxyHandler()) ); open(os.path.join(ipp, pf), <span class="string">'wb'</span>).write(urllib.request.urlopen( <span class="string">'http://sublime.wbond.net/'</span> + pf.replace(<span class="string">' '</span>,<span class="string">'%20'</span>)).read())
</pre></td></tr></table></figure>

<p>另外一种就是自己下载这个<a href="https://github.com/wbond/sublime_package_control" target="_blank"><code>sublime_package_control</code></a>包，解压后把解压出来的文件夹名称改为<code>Package Control</code>，点击这个文件夹进去后应该可以看到两个文件夹和若干文件，然后点击<code>Preferences &gt; Browse Packages…</code>，把刚刚的那个文件夹拷贝到这里，完成安装。<br>安装后重启Sublime 3。</p>
<p>具体的安装过程的官方介绍在<a href="https://sublime.wbond.net/installation" target="_blank"><a href="https://sublime.wbond.net/installation">https://sublime.wbond.net/installation</a></a>。</p>
<p>在<a href="https://sublime.wbond.net/" target="_blank"><a href="https://sublime.wbond.net/">https://sublime.wbond.net/</a></a>这个网站是官方的sublime的插件和介绍，需要的插件可以到上面查找。</p>
<h2>插件的安装</h2>
<p>插件可以在安装也可以离线安装，在线安装非常简单<br>首先<code>Preferences &gt; Package Control</code> 选择 <code>Package Control: Install Package</code> 或者直接快捷键<code>Ctrl + Shift + P</code>找出<code>Package Control: Install Package</code> ，然后查找需要的package名称，选择后就是安装了，安装完重启下sublime。</p>
<p>下面将介绍下我使用的几个包</p>
<ul>
<li><p>Theme - Soda 主题包，听说是完美的编码主题，挺不错，其实感觉自带的已经很好了<br>安装需要自己的配置文件中更改主题。</p>
</li>
<li><p>Alignment 对齐包，将<code>=</code>对齐，快捷键需要自己重新设置(跟QQ截屏冲突)。</p>
</li>
<li><p>Encoding Helper 在状态栏显示编码类型</p>
</li>
<li><p>LineEndings 在状态栏现在换行符的编码类型</p>
</li>
<li><p>SideBarEnhancements 可以在侧边栏显示打开的文件夹，可以有强大的文件右键菜单</p>
</li>
<li><p>markdownediting 写markdown时高亮，感觉效果还可以</p>
</li>
<li>markdown Preview 浏览器预览MD文件</li>
</ul>
<p>还有很多其他的插件，但是还没有用到。</p>
<h1>Snippets（代码片段）功能</h1>
<p>这个主要是保存一些比较常用的代码片段，可以设置代码模版中需要更改的变量，在插入的时候按tab可以修改变量。<br>下面为Snippet的模版，需要在这个模板的基础上修改成自己的代码片段。具体的配置可以查看<a href="http://sublimetext.info/docs/en/extensibility/snippets.html" target="_blank">官方指南</a>。</p>
<figure class="highlight lang-xml"><table><tr><td class="gutter"><pre>1
2
3
4
5
6
7
8
9
</pre></td><td class="code"><pre><span class="tag">&lt;<span class="title">snippet</span>&gt;</span>
    <span class="tag">&lt;<span class="title">content</span>&gt;</span><span class="cdata">&lt;![CDATA[
    Hello, ${1:this} is a ${2:snippet}.
]]&gt;</span><span class="tag">&lt;/<span class="title">content</span>&gt;</span>
    <span class="comment">&lt;!-- Optional: Set a tabTrigger to define how to trigger the snippet --&gt;</span>
    <span class="comment">&lt;!-- &lt;tabTrigger&gt;hello&lt;/tabTrigger&gt; --&gt;</span>
    <span class="comment">&lt;!-- Optional: Set a scope to limit where the snippet will trigger --&gt;</span>
    <span class="comment">&lt;!-- &lt;scope&gt;source.python&lt;/scope&gt; --&gt;</span>
<span class="tag">&lt;/<span class="title">snippet</span>&gt;</span>
</pre></td></tr></table></figure>

<h1>其他技巧</h1>
<p>建议显示状态栏，状态栏右边可以点击，有两个菜单，一个是设置tab之类的内容，另一个是设置当前的编写语言类型，设置语言类型可以用命令。</p>
<p>C及其他语言编译与运行，这些只要能在命令行中运行，sublime就默认可以运行了，也有快捷键，很方便。</p>
]]></content>
    <category scheme="http://chenyue.me/tags/sublime/" term="sublime"/>
  </entry>
  <entry>
    <title type="html"><![CDATA[用Hexo搭博客啦]]></title>
    <link href="http://chenyue.me/2013/12/16/hexo-my-blog/"/>
    <id>http://chenyue.me/2013/12/16/hexo-my-blog/</id>
    <published>2013-12-16T07:12:18.000Z</published>
    <updated>2013-12-17T14:55:34.000Z</updated>
    <content type="html"><![CDATA[<p>昨天折腾了不少时间，终于搭好博客了。<br>搭博客，域名，还有改了一些自己的配置，看了很多介绍也学到很多。</p>
<h1>配置环境</h1>
<p>环境是 windows 7</p>
<a id="more"></a>

<h2>安装 git 和配置 github</h2>
<p>按照github上面的指南<a href="https://help.github.com/articles/set-up-git" target="_blank">安装git</a>和<a href="https://help.github.com/articles/generating-ssh-keys" target="_blank">生成ssh-key</a>直接做就好了。</p>
<h2>安装 Node.js 和 Hexo</h2>
<p>安装 Node.js ，到<a href="http://nodejs.org/" target="_blank">Node.js官网</a>下载直接安装就好。</p>
<p>接下来就是在 Node.js 中安装 Hexo ，打开git的Git Bash输入这个命令。</p>
<figure class="highlight lang-shell"><table><tr><td class="gutter"><pre>1
</pre></td><td class="code"><pre><span class="title">npm</span> install -g hexo
</pre></td></tr></table></figure>

<h1>Hexo 初始化与配置</h1>
<h2>初始化</h2>
<p>新建一个目录myBlog，在里面初始化Hexo。</p>
<figure class="highlight lang-shell"><table><tr><td class="gutter"><pre>1
2
3
</pre></td><td class="code"><pre><span class="title">mkdir</span> myBlog
<span class="title">cd</span> myBlog
<span class="title">hexo</span> init
</pre></td></tr></table></figure>

<h2>生成静态站点</h2>
<p>在myBlog目录下执行下面的命令，生成静态站点。</p>
<figure class="highlight lang-shell"><table><tr><td class="gutter"><pre>1
</pre></td><td class="code"><pre><span class="title">hexo</span> generate 或者 hexo g
</pre></td></tr></table></figure>

<h2>本地启动浏览</h2>
<p>在本地启动网站服务，浏览博客。打开浏览器输入<code>localhost:4000</code>就可以浏览网站了。</p>
<figure class="highlight lang-shell"><table><tr><td class="gutter"><pre>1
</pre></td><td class="code"><pre><span class="title">hexo</span> server 或者 hexo s
</pre></td></tr></table></figure>

<p>可以把上面两个命令写到同一个脚本文件中，就不用每次敲两个命令。</p>
<h2>填写 Hexo 配置</h2>
<p>查看Hexo的<a href="http://zespia.tw/hexo/docs/configuration.html" target="_blank">配置说明</a>，填写myBlog目录下的<code>_config.yml</code>文件，就把需要的信息填写上去就可以，基本上也不用修改什么拉。</p>
<h2>填写主题配置</h2>
<p>填写主题的配置文件，在<code>\myBlog\themes\light\</code>的<code>_config.yml</code>，查看<a href="https://github.com/tommy351/hexo-theme-light" target="_blank">配置文件</a>，基本上也按照默认配置就好。</p>
<h1>进一步进行配置</h1>
<h2>添加RSS和sitemap</h2>
<p>在<code>myBlog</code>目录下，添加生成RSS和sitemap的插件</p>
<figure class="highlight lang-shell"><table><tr><td class="gutter"><pre>1
2
</pre></td><td class="code"><pre><span class="title">npm</span> install hexo-generator-feed
<span class="title">npm</span> install hexo-generator-sitemap
</pre></td></tr></table></figure>

<p>在myBlog目录下的<code>_config.yml</code>文件添加以下内容，一般插件也这样添加</p>
<figure class="highlight lang-shell"><table><tr><td class="gutter"><pre>1
2
3
</pre></td><td class="code"><pre><span class="comment">Plugins:</span>
<span class="literal">-</span> <span class="comment">hexo</span>-<span class="comment">generator</span>-<span class="comment">feed</span>
<span class="literal">-</span> <span class="comment">hexo</span>-<span class="comment">generator</span>-<span class="comment">sitemap
</pre></td></tr></table></figure>

<p>可以在主题的<code>_config.yml</code>里面的menu添加，前面需要两个空格。</p>
<figure class="highlight lang-shell"><table><tr><td class="gutter"><pre>1
</pre></td><td class="code"><pre>  <span class="attribute">RSS</span>: <span class="string">/atom.xml</span>
</pre></td></tr></table></figure>

<h2>添加About页面和Widget</h2>
<p>添加页面直接输入命令，然后在<code>source\about\index.md</code>文件里面加入自己的内容，这种方法比较简单。</p>
<figure class="highlight lang-shell"><table><tr><td class="gutter"><pre>1
</pre></td><td class="code"><pre><span class="title">hexo</span> new page <span class="string">"about"</span>
</pre></td></tr></table></figure>

<p>可以在主题的<code>_config.yml</code>里面的menu添加以下内容，如果语言是中文的话需要在<code>languages</code>里面添加不同的语言内容。</p>
<figure class="highlight lang-shell"><table><tr><td class="gutter"><pre>1
</pre></td><td class="code"><pre>  <span class="attribute">About</span>: <span class="string">/about</span>
</pre></td></tr></table></figure>

<p>在主题的<code>layout\_widget</code>文件里面添加文件<code>about.ejs</code>，用html语言写内容，也可以添加图片等等。</p>
<figure class="highlight lang-html"><table><tr><td class="gutter"><pre>1
2
3
4
5
6
</pre></td><td class="code"><pre><span class="tag">&lt;<span class="title">div</span> <span class="attribute">class</span>=<span class="value">"widget tag"</span>&gt;</span>
  <span class="tag">&lt;<span class="title">h3</span> <span class="attribute">class</span>=<span class="value">"title"</span>&gt;</span><span class="vbscript">&lt;%= __(<span class="comment">'about_me') %&gt;</span></span><span class="tag">&lt;/<span class="title">h3</span>&gt;</span>
  <span class="tag">&lt;<span class="title">ul</span> <span class="attribute">class</span>=<span class="value">"entry"</span>&gt;</span>
      <span class="tag">&lt;<span class="title">li</span>&gt;</span><span class="tag">&lt;/<span class="title">li</span>&gt;</span>
  <span class="tag">&lt;/<span class="title">ul</span>&gt;</span>
<span class="tag">&lt;/<span class="title">div</span>&gt;</span>
</pre></td></tr></table></figure>

<p>接下来就在主题的<code>_config.yml</code>里面的widgets添加</p>
<figure class="highlight lang-shell"><table><tr><td class="gutter"><pre>1
</pre></td><td class="code"><pre><span class="literal">-</span> <span class="comment">aboutme
</pre></td></tr></table></figure>

<h2>添加数学公式</h2>
<p>在<code>layout\_partial</code>添加<code>mathjax.ejs</code></p>
<figure class="highlight lang-html"><table><tr><td class="gutter"><pre>1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
</pre></td><td class="code"><pre><span class="comment">&lt;!-- mathjax config similar to math.stackexchange --&gt;</span>

<span class="tag">&lt;<span class="title">script</span> <span class="attribute">type</span>=<span class="value">"text/x-mathjax-config"</span>&gt;</span><span class="javascript">
  MathJax.Hub.Config({
    tex2jax: {
      inlineMath: [ [<span class="string">'$'</span>,<span class="string">'$'</span>], [<span class="string">"\\("</span>,<span class="string">"\\)"</span>] ],
      processEscapes: <span class="literal">true</span>
    }
  });
</span><span class="tag">&lt;/<span class="title">script</span>&gt;</span>

<span class="tag">&lt;<span class="title">script</span> <span class="attribute">type</span>=<span class="value">"text/x-mathjax-config"</span>&gt;</span><span class="javascript">
    MathJax.Hub.Config({
      tex2jax: {
        skipTags: [<span class="string">'script'</span>, <span class="string">'noscript'</span>, <span class="string">'style'</span>, <span class="string">'textarea'</span>, <span class="string">'pre'</span>, <span class="string">'code'</span>]
      }
    });
</span><span class="tag">&lt;/<span class="title">script</span>&gt;</span>

<span class="tag">&lt;<span class="title">script</span> <span class="attribute">type</span>=<span class="value">"text/x-mathjax-config"</span>&gt;</span><span class="javascript">
    MathJax.Hub.Queue(<span class="keyword">function</span>() {
        <span class="keyword">var</span> all = MathJax.Hub.getAllJax(), i;
        <span class="keyword">for</span>(i=<span class="number">0</span>; i &lt; all.length; i += <span class="number">1</span>) {
            all[i].SourceElement().parentNode.className += <span class="string">' has-jax'</span>;
        }
    });
</span><span class="tag">&lt;/<span class="title">script</span>&gt;</span>

<span class="tag">&lt;<span class="title">script</span> <span class="attribute">type</span>=<span class="value">"text/javascript"</span> <span class="attribute">src</span>=<span class="value">"http://cdn.mathjax.org/mathjax/latest/MathJax.js?config=TeX-AMS-MML_HTMLorMML"</span>&gt;</span><span class="javascript">
</span><span class="tag">&lt;/<span class="title">script</span>&gt;</span>
</pre></td></tr></table></figure>

<p>接下来在<code>layout\_partial</code>的<code>after_footer.ejs</code>里面添加，这样就可以了$\sum_{i=1}^{n=10}{i}=55$。</p>
<figure class="highlight"><table><tr><td class="gutter"><pre>1
</pre></td><td class="code"><pre>&lt;<span class="string">%- partial('mathjax') %&gt;
</pre></td></tr></table></figure>

<h2>使用disqus、addthis及google analytics</h2>
<p>虽说这些在国内不稳定，但还是觉得使用这些比较好，google analytics用了挺久的感觉还是比较好用。</p>
<p>addthis登录后可以设置及修改样式，像下面那样，跟这个主题还算比较搭。</p>
<p>disqus看起来也是挺不错的，哈！</p>
<h2>其他配置</h2>
<p>关于Hexo自动把可以在<code>.md</code>文件转成<code>.html</code>这个问题，delpoy前将<code>README.md</code>和<code>favicon.png</code>拷贝到<code>public</code>文件夹，这样再使用<code>Hexo deploy</code>部署到github的时候也会拷贝上去，可以写个代码自动拷贝和deploy。</p>
<figure class="highlight"><table><tr><td class="gutter"><pre>1
2
3
4
5
6
7
8
</pre></td><td class="code"><pre><span class="shebang">#!/bin/sh</span>

<span class="keyword">echo</span> <span class="string">'cp favicon.png public/favicon.png'</span>
cp favicon.png public/favicon.png
<span class="keyword">echo</span> <span class="string">'cp README.md public/README.md'</span>
cp README.md public/README.md
<span class="keyword">echo</span> <span class="string">'hexo deploy'</span>
hexo deploy
</pre></td></tr></table></figure>

<h2>关于域名</h2>
<p><code>chenyue.me</code>原先域名是在<a href="https://www.godaddy.com/" target="_blank">Godaddy</a>注册的，把它转到<a href="www.urlspot.com">URLspot</a>一个代理商，然后通过购买其他产品是的组合的价格降低，最后差不多￥43就可以了。之后也还可以在继续一年一年那样续。</p>
<p>后来查了下才知道原来国内一般都用<a href="https://www.dnspod.cn/Domain" target="_blank">DNSpod</a>，所以解析服务转过来。<br>也学习了一些其他关于域名知识。</p>
<h1>参考内容</h1>
<ul>
<li><a href="http://ibruce.info/2013/11/22/hexo-your-blog/" target="_blank"><a href="http://ibruce.info/2013/11/22/hexo-your-blog/">http://ibruce.info/2013/11/22/hexo-your-blog/</a></a></li>
<li><a href="http://zipperary.com/2013/05/30/hexo-guide-4/" target="_blank"><a href="http://zipperary.com/2013/05/30/hexo-guide-4/">http://zipperary.com/2013/05/30/hexo-guide-4/</a></a></li>
<li><a href="http://zipperary.com/2013/06/02/hexo-guide-5/" target="_blank"><a href="http://zipperary.com/2013/06/02/hexo-guide-5/">http://zipperary.com/2013/06/02/hexo-guide-5/</a></a></li>
<li><a href="http://yangjian.me/workspace/building-blog-with-hexo/" target="_blank"><a href="http://yangjian.me/workspace/building-blog-with-hexo/">http://yangjian.me/workspace/building-blog-with-hexo/</a></a></li>
<li><a href="http://wugh.github.io/2013/11/12/hexo%E6%95%B0%E5%AD%A6%E5%85%AC%E5%BC%8F/" target="_blank">Hexo数学公式/</a></li>
</ul>
]]></content>
    <category scheme="http://chenyue.me/tags/Hexo/" term="Hexo"/>
  </entry>
  <entry>
    <title type="html"><![CDATA[新的博客]]></title>
    <link href="http://chenyue.me/2013/12/14/new-start/"/>
    <id>http://chenyue.me/2013/12/14/new-start/</id>
    <published>2013-12-14T13:35:21.000Z</published>
    <updated>2013-12-16T15:54:50.000Z</updated>
    <content type="html"><![CDATA[<blockquote>
<p><strong>《暗时间》</strong><br>每个人的生命就像沙漏，里面装的沙子总量大致相当，不同的是，有的沙漏颈部较细，有的沙漏颈部较粗。颈部较细的沙漏能够抓住每一粒时间之沙，即使沙子总量一样，也能拥有更长的生命。  </p>
</blockquote>
<hr>
<p>就如同<a href="http://book.douban.com/subject/6709809/" target="_blank">《暗时间》</a>的开卷所言，每个人的生命像沙漏，怎样才能让自己的沙漏颈部细点呢？书中给了我们答案<strong>多思考</strong>，整本书都在告诉我们关于思考的种种，读后深有体会，生活就得多思考，让时间慢慢流走，多思考问题，思考生活，思考人生书。</p>
<p>书中有这么这一章<a href="http://mindhacks.cn/2009/02/15/why-you-should-start-blogging-now/" target="_blank">为什么你应该（从现在开始就）写博客</a>。第一次看到这个觉得很有道理，有种灵光一闪，就很冲动了想自己弄个博客，但是那时候在火车上。然后就不了了之了。囧</p>
<a id="more"></a>

<p>一直以来都只是在<code>Qzone</code>上写写日志，记录生活点滴，发下牢骚而已。后来发现很多人都有自己的域名博客，很酷。觉得<code>WordPress</code>很不错，但自从部署了实验室的博客后觉得这个东西还是比较麻烦，囧，懒人就是这样。不过后来是突然间发现<code>blogger</code>这个博客系统，不知道当时怎么想的就在上面写博客，到现在总共写了有15篇，现在看看第一篇<a href="http://leapchyue.blogspot.com/2012/02/blog-post.html" target="_blank">小跃仔开始写博客</a>心情跟现在一模一样，囧，以后是不是这样就停止写了呢，这个留待后面观察。</p>
<p>去年看到<code>github</code>也可以搭博客，但发现git那个东西很烦也没有去折腾了。今年年初发现chenyue.me这个域名可以注册，就傻傻去注册了，又不想自己去买空间去搞，就绑定到blogger上的<a href="blog.chenyue.me">博客</a>，现在改成域名的子域blog上面，但blogger访问不怎么顺畅，这个你懂的。第一个真正意义上的博客就这样。</p>
<p>在今年暑假的时候看到一个<a href="http://www.dandyweng.com/" target="_blank">很漂亮的博客</a>，萌发了想学习前端框架<a href="http://getbootstrap.com/" target="_blank"><code>bootstrap</code></a>的想法，但是不了了之，前几天又突然萌发出来了。前几天在用<code>latex</code>写东西的时候，不知道查什么的发现了<code>markdown</code>这种神奇的编辑方法，可以很方便的记录笔记，包括公式、又有代码高亮什么的。后来才发现原来github上的.md文件就是markdown，囧，以前肿么没注意到。之后便开始看下要用哪种生成静态博客的方式，看到一个博客的一篇更新介绍他换成了<code>Hexo</code>，之前他也用过其他的一些，但是最后换到了这个，再看发现部署什么的简单，很符合自己的胃口，而且定制什么都很简单，爽爆了，就用这个吧。</p>
<p>当然还有一点就是就是这周发现邮箱里面有不少dodaddy的邮件，囧，域名快过期了，得续费。寻找最省钱的续域名的方法，<code>.me</code>不像<code>.com</code>那样经常有优惠可以弄到很便宜，后来发现有方法可以弄到大概￥43续一年，发神经一下子续了3年。额，这样就得找时间重新整理下博客了，不然就浪费了钱。</p>
<p>准备在这个博客上记录下自己的总结，然后多思考，如序言所写，主要要记录以下栏目内容</p>
<ul>
<li>备忘 记录遇到的问题和解法</li>
<li>总结 写读书笔记、学习笔记</li>
<li>随想 思考生活所想游记等</li>
</ul>
<p>生命在于折腾，然后也要设计一个自己的主题，得有一个比较时尚的主页，有类似wiki的读书笔记栏目，旅游页面，My Time Line等等。</p>
<p>以后也要多思考、多写博客。明天写篇介绍建这个博客搭建中过程和遇到的问题。</p>
<p>加油！</p>
]]></content>
    <category scheme="http://chenyue.me/tags/个人日志/" term="个人日志"/>
    <category scheme="http://chenyue.me/tags/随想/" term="随想"/>
    <category scheme="http://chenyue.me/categories/生活随想/" term="生活随想"/>
  </entry>
</feed>
